#!/bin/bash

# Script de test du pipeline HealthFlow-MS
echo "üß™ Test du pipeline complet HealthFlow-MS"
echo "========================================="

# Configuration
BASE_URL_PROXY="http://localhost:8081"
BASE_URL_API="http://localhost:8082"
TEST_PATIENT_ID="test-patient-$(date +%s)"

# Fonction pour afficher les r√©sultats
show_result() {
    if [ $1 -eq 0 ]; then
        echo "‚úÖ $2"
    else
        echo "‚ùå $2"
    fi
}

# Test 1: Health checks
echo ""
echo "üîç Test 1: V√©rification de la sant√© des services"

curl -s -f "$BASE_URL_PROXY/api/v1/fhir/health" > /dev/null
show_result $? "ProxyFHIR Health Check"

curl -s -f "$BASE_URL_API/health" > /dev/null
show_result $? "ScoreAPI Health Check"

curl -s -f "http://localhost:8083" > /dev/null
show_result $? "AuditFairness Dashboard"

# Test 2: Authentication
echo ""
echo "üîê Test 2: Authentification API"

TOKEN_RESPONSE=$(curl -s -X POST "$BASE_URL_API/auth/token")
TOKEN=$(echo $TOKEN_RESPONSE | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)

if [ ! -z "$TOKEN" ]; then
    echo "‚úÖ Token JWT obtenu: ${TOKEN:0:20}..."
    export AUTH_HEADER="Authorization: Bearer $TOKEN"
else
    echo "‚ùå √âchec de l'authentification"
    exit 1
fi

# Test 3: Ingestion de donn√©es
echo ""
echo "üì• Test 3: Ingestion de donn√©es FHIR"

SYNC_RESPONSE=$(curl -s -X POST "$BASE_URL_PROXY/api/v1/fhir/sync/patient/$TEST_PATIENT_ID" \
    -H "Content-Type: application/json")

echo "R√©ponse d'ingestion: $SYNC_RESPONSE"

if echo "$SYNC_RESPONSE" | grep -q "success\|skipped"; then
    echo "‚úÖ Ingestion r√©ussie"
else
    echo "‚ùå √âchec de l'ingestion"
fi

# Test 4: Attendre le traitement (pipeline asynchrone)
echo ""
echo "‚è≥ Test 4: Attente du traitement du pipeline (60 secondes)"
sleep 60

# Test 5: V√©rification des scores
echo ""
echo "üìä Test 5: R√©cup√©ration des scores r√©cents"

RECENT_SCORES=$(curl -s -H "$AUTH_HEADER" "$BASE_URL_API/api/v1/scores/recent?limit=10")
echo "Scores r√©cents: $RECENT_SCORES"

if echo "$RECENT_SCORES" | grep -q "patient_pseudo_id"; then
    echo "‚úÖ Scores disponibles"
    
    # Extraire un patient pseudo ID pour les tests suivants
    PSEUDO_ID=$(echo "$RECENT_SCORES" | grep -o '"patient_pseudo_id":"[^"]*"' | head -1 | cut -d'"' -f4)
    
    if [ ! -z "$PSEUDO_ID" ]; then
        echo "üéØ Test patient trouv√©: $PSEUDO_ID"
        
        # Test 6: Score sp√©cifique
        echo ""
        echo "üìà Test 6: Score sp√©cifique d'un patient"
        
        PATIENT_SCORE=$(curl -s -H "$AUTH_HEADER" "$BASE_URL_API/api/v1/score/$PSEUDO_ID")
        echo "Score du patient: $PATIENT_SCORE"
        
        if echo "$PATIENT_SCORE" | grep -q "risk_score"; then
            echo "‚úÖ Score sp√©cifique r√©cup√©r√©"
        else
            echo "‚ùå √âchec r√©cup√©ration score sp√©cifique"
        fi
        
        # Test 7: Explications SHAP
        echo ""
        echo "üîç Test 7: Explications SHAP"
        
        EXPLANATION=$(curl -s -H "$AUTH_HEADER" "$BASE_URL_API/api/v1/explain/$PSEUDO_ID")
        echo "Explications: $EXPLANATION"
        
        if echo "$EXPLANATION" | grep -q "shap_values"; then
            echo "‚úÖ Explications SHAP r√©cup√©r√©es"
        else
            echo "‚ùå √âchec r√©cup√©ration explications"
        fi
    fi
else
    echo "‚ùå Aucun score disponible"
fi

# Test 8: Statistiques g√©n√©rales
echo ""
echo "üìà Test 8: Statistiques g√©n√©rales"

STATS=$(curl -s -H "$AUTH_HEADER" "$BASE_URL_API/api/v1/statistics/summary")
echo "Statistiques: $STATS"

if echo "$STATS" | grep -q "total_patients"; then
    echo "‚úÖ Statistiques disponibles"
else
    echo "‚ùå √âchec r√©cup√©ration statistiques"
fi

# Test 9: Patients √† haut risque
echo ""
echo "‚ö†Ô∏è  Test 9: Patients √† haut risque"

HIGH_RISK=$(curl -s -H "$AUTH_HEADER" "$BASE_URL_API/api/v1/scores/high-risk?threshold=0.5")
echo "Patients √† haut risque: $HIGH_RISK"

if echo "$HIGH_RISK" | grep -q "\[\]" || echo "$HIGH_RISK" | grep -q "patient_pseudo_id"; then
    echo "‚úÖ Requ√™te haut risque fonctionnelle"
else
    echo "‚ùå √âchec requ√™te haut risque"
fi

# R√©sum√© final
echo ""
echo "üéØ R√©sum√© des tests"
echo "=================="
echo "Le pipeline HealthFlow-MS a √©t√© test√© avec succ√®s !"
echo ""
echo "üí° Pour tester avec de vraies donn√©es FHIR:"
echo "   curl -X POST $BASE_URL_PROXY/api/v1/fhir/sync/patient/[REAL_PATIENT_ID]"
echo ""
echo "üìä Consultez le dashboard d'audit: http://localhost:8083"
echo "üìñ Documentation API compl√®te: http://localhost:8082/docs"